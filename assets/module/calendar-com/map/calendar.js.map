{"version":3,"sources":["calendar.js"],"names":["$","Calendar","container","options","this","$container","empty","set","date","Date","timestamp","now","thisYear","year","getFullYear","thisMonth","month","getMonth","thisDay","day","getDate","initDom","prev","next","dayclick","dayFormat","str","length","getWeekText","index","language","Plugin","parseInt","extend","configDefault","each","$this","data","require","template","format","autoclose","prototype","constructor","$calendar","appendTo","appendIndicator","appendDay","find","append","map","v","join","days","getDaysInMonth","firstDayWeek","getDay","count","dayDOM","i","dDate","dWeek","push","text","addClass","pageTurn","name","callback","self","click","call","ev","Event","calendar","trigger","$list","on","attr","hasClass","removeClass","fn","calendarCom","jQuery"],"mappings":"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","file":"calendar.js","sourcesContent":["//calendar.js\r\n/*\r\nAPI:\r\n     //参数options 即 Calendar.configDefault\r\n     $().calendarCom( timestamp );\r\n     或者 $().calendarCom( timestamp, options );\r\n     或者 $().calendarCom( options );\r\n\r\n     //当日历显示出来之后\r\n     $().on('shown.xui.calendar', function( ev ){\r\n        console.log( ev )\r\n        console.log( ev.calendar )\r\n     })\r\n     //当点击向前翻页后\r\n     $().on('prev.xui.calendar', function( ev ){})\r\n     //当点击向后翻页后\r\n     $().on('next.xui.calendar', function( ev ){})\r\n     //当日期被改变时被触发\r\n     $().on('changeDay.xui.calendar', function( e, calendar ){})\r\n */\r\n+function( $ ){\r\n    'use strict';\r\n    require(['css!module/calendar-com/calendar']);\r\n    var template = '<div class=\"calendar-com\"><header class=\"calendar-header pr\"><a href=\"javascript:;\" class=\"calendar-prev pa\"><i class=\"icon icon-chevron-left\"></i></a><a href=\"javascript:;\" class=\"calendar-next pa\"><i class=\"icon icon-chevron-right\"></i></a><div class=\"calendar-date\"></div></header><div class=\"calendar-body\"><ul class=\"calendar-indi list-unstyled cf\"></ul><ul class=\"calendar-list list-unstyled cf\"></ul></div></div>';\r\n    var extend = $.extend;\r\n\r\n    function Calendar( container, options ){\r\n        this.$container = $( container).empty();\r\n        this.set = options;\r\n        this.date = new Date( options.timestamp || Date.now() );\r\n        this.thisYear = this.year = this.date.getFullYear();\r\n        this.thisMonth = this.month = this.date.getMonth() + 1;\r\n        this.thisDay = this.day = this.date.getDate();\r\n\r\n        this.initDom();\r\n        this.prev();\r\n        this.next();\r\n        this.dayclick();\r\n    }\r\n\r\n    function dayFormat( str ){\r\n        return (str = '' + str).length > 1 ? str : ('0' + str);\r\n    }\r\n\r\n    function getWeekText( index ){\r\n        return Calendar.language[ index ];\r\n    }\r\n\r\n    //先做部分API，其余到后面再补充\r\n    Calendar.configDefault = {\r\n        timestamp: null,\r\n        format: 'yyyy-mm-dd hh:ii',\r\n        //选择日期后自动关闭\r\n        autoclose: false,\r\n        //日期可点击\r\n        dayclick: true\r\n    };\r\n    //这是一个很限制的language(ˇˍˇ)\r\n    Calendar.language = ['一','二','三','四','五','六','日'];\r\n\r\n    Calendar.prototype = {\r\n        constructor: Calendar,\r\n        initDom: function(){\r\n            this.$calendar = $(template).appendTo( this.$container );\r\n            this.appendIndicator();\r\n            this.appendDay();\r\n        },\r\n        appendIndicator: function(){\r\n            this.$calendar.find('.calendar-indi').append(\r\n                Calendar.language.map(function( v ){\r\n                    return '<li>'+ v +'</li>';\r\n                }).join('')\r\n            );\r\n        },\r\n        appendDay: function(){\r\n            var $calendar = this.$calendar;\r\n            var year = this.year;\r\n            var month = this.month;\r\n            var days = this.getDaysInMonth();\r\n            //计算当月第一天是星期几\r\n            var firstDayWeek = new Date( year +'-'+ month +'-1' ).getDay() || 7;\r\n            //li总个数：实际天数 + 月的第一天之前的空格天数\r\n            var count = days + firstDayWeek - 1;\r\n            var dayDOM = [];\r\n\r\n            for( var i = 0; i < count; i++ ){\r\n                var day = i - firstDayWeek + 2;\r\n                if( day > 0 ){\r\n                    var dDate = year +'-'+ dayFormat( month ) +'-'+ dayFormat( day );\r\n                    var dWeek = getWeekText( (new Date( dDate ).getDay() || 7) - 1 );\r\n                    dayDOM.push(\r\n                        '<li data-date=\"'+ dDate +'\" data-week=\"'+ dWeek +'\">'+ day +'</li>'\r\n                    );\r\n                }else{\r\n                    dayDOM.push( '<li></li>' );\r\n                }\r\n            }\r\n\r\n            $calendar.find('.calendar-date').text( year +'年'+ month +'月' );\r\n            $calendar.find('.calendar-list').empty().append( dayDOM.join('') );\r\n\r\n            if( year === this.thisYear &&\r\n                month === this.thisMonth &&\r\n                this.day === this.thisDay ){\r\n                //eq,firstDayWeek都是从0计算，所以-2\r\n                $calendar.find('.calendar-list li:eq('+( this.day + firstDayWeek - 2 )+')')\r\n                    .addClass('active');\r\n            }\r\n        },\r\n        pageTurn: function( name, callback ){\r\n            var self = this;\r\n            self.$calendar.find( '.calendar-' + name ).click(function(){\r\n                if( self[ 'disabled' + name ] ){\r\n                    return;\r\n                }\r\n                //处理不同的加减法\r\n                callback.call( self );\r\n                //绘制DOM\r\n                self.appendDay();\r\n\r\n                var ev = $.Event( name + '.xui.calendar' );\r\n                ev.calendar = self;\r\n                self.$calendar.trigger( ev );\r\n            });\r\n        },\r\n        prev: function(){\r\n            this.pageTurn( 'prev', function(){\r\n                this.month--;\r\n                if( this.month < 1 ){\r\n                    this.month = 12;\r\n                    this.year--;\r\n                }\r\n            });\r\n        },\r\n        next: function(){\r\n            this.pageTurn( 'next', function(){\r\n                this.month++;\r\n                if( this.month > 12 ){\r\n                    this.month = 1;\r\n                    this.year++;\r\n                }\r\n            });\r\n        },\r\n        dayclick: function(){\r\n            var self = this;\r\n            var $list = this.$calendar.find('.calendar-list');\r\n            if( this.set.dayclick ){\r\n                $list.on('click.xui.calendar', '>li', function(){\r\n                    if( $(this).attr('data-date') && !$(this).hasClass('active') ){\r\n                        $list.find('>.active').removeClass('active');\r\n                        $(this).addClass('active');\r\n\r\n                        var ev = $.Event( 'changeDay.xui.calendar' );\r\n                        ev.calendar = self;\r\n                        self.$calendar.trigger( ev );\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        getDaysInMonth: function(){\r\n            var year = this.year;\r\n            var month = this.month;\r\n            if( month !== 2 ){\r\n                //1,3,5,7, 8,10,12 = 31\r\n                //4,6, 9,11 = 30\r\n                if( month < 8 && month % 2 === 0 || month >= 8 && month % 2 === 1 ){\r\n                    return 30;\r\n                }else{\r\n                    return 31;\r\n                }\r\n            }\r\n            //2月: 平年28，闰年29\r\n            //每4年一闰，逢百年不润，逢400年时又需要再闰一天\r\n            if( year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 ){\r\n                return 29;\r\n            }\r\n            return 28;\r\n        }\r\n    };\r\n\r\n    function Plugin( timestamp, options ){\r\n        if( typeof timestamp === 'number' ){\r\n            timestamp = {\r\n                timestamp: parseInt( timestamp )\r\n            };\r\n            if( typeof options === 'object' ){\r\n                timestamp = extend( timestamp, options );\r\n            }\r\n            options = extend( {}, Calendar.configDefault, timestamp );\r\n        }else if( typeof timestamp === 'object' ){\r\n            options = extend( {}, Calendar.configDefault, timestamp );\r\n        }else{\r\n            options = Calendar.configDefault;\r\n        }\r\n        return this.each(function(){\r\n            var $this = $(this);\r\n            //预留data\r\n            var data = $this.data('xui.calendar');\r\n\r\n            if( !data ){\r\n                $this.data( 'xui.calendar', ( data = new Calendar(this, options) ) );\r\n            }\r\n        });\r\n    }\r\n\r\n    $.fn.calendarCom = Plugin;\r\n    $.fn.calendarCom.configDefault = Calendar.configDefault;\r\n    $.fn.calendarCom.language = Calendar.language;\r\n}(jQuery);"],"sourceRoot":"/source/"}